<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>com.io7m.stonesignal</artifactId>
    <groupId>com.io7m.stonesignal</groupId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>com.io7m.stonesignal.server</artifactId>

  <name>com.io7m.stonesignal.server</name>
  <description>Position recorder (Server)</description>
  <url>https://www.io7m.com/software/stonesignal/</url>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.stonesignal.protocol.device</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.stonesignal.protocol.admin</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.stonesignal.protocol.data</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.io7m.jxe</groupId>
      <artifactId>com.io7m.jxe.core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.io7m.lanark</groupId>
      <artifactId>com.io7m.lanark.core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.io7m.jmulticlose</groupId>
      <artifactId>com.io7m.jmulticlose.core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.io7m.seltzer</groupId>
      <artifactId>com.io7m.seltzer.api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.io7m.repetoir</groupId>
      <artifactId>com.io7m.repetoir.core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
    </dependency>

    <dependency>
      <groupId>com.io7m.canonmill</groupId>
      <artifactId>com.io7m.canonmill.core</artifactId>
    </dependency>

    <dependency>
      <groupId>com.io7m.quarrel</groupId>
      <artifactId>com.io7m.quarrel.ext.logback</artifactId>
    </dependency>
    <dependency>
      <groupId>com.io7m.quarrel</groupId>
      <artifactId>com.io7m.quarrel.core</artifactId>
    </dependency>

    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-context</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-sdk</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-exporter-otlp</artifactId>
      <exclusions>
        <exclusion>
          <groupId>io.opentelemetry</groupId>
          <artifactId>opentelemetry-exporter-sender-okhttp</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-exporter-sender-jdk</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-sdk-logs</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-sdk-metrics</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-sdk-common</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-sdk-trace</artifactId>
    </dependency>

    <!-- Web server -->
    <dependency>
      <groupId>io.helidon.http</groupId>
      <artifactId>helidon-http</artifactId>
    </dependency>
    <dependency>
      <groupId>io.helidon.webserver</groupId>
      <artifactId>helidon-webserver</artifactId>
    </dependency>
    <dependency>
      <groupId>io.helidon.common</groupId>
      <artifactId>helidon-common-tls</artifactId>
    </dependency>
    <dependency>
      <groupId>io.helidon.common</groupId>
      <artifactId>helidon-common-socket</artifactId>
    </dependency>
    <dependency>
      <groupId>io.helidon.http.media</groupId>
      <artifactId>helidon-http-media</artifactId>
    </dependency>

    <!-- Database -->
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
    </dependency>
    <dependency>
      <groupId>com.io7m.darco</groupId>
      <artifactId>com.io7m.darco.postgres</artifactId>
    </dependency>
    <dependency>
      <groupId>com.io7m.darco</groupId>
      <artifactId>com.io7m.darco.api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>

    <!-- JSON handling. -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-cbor</artifactId>
    </dependency>
    <dependency>
      <groupId>com.io7m.dixmont</groupId>
      <artifactId>com.io7m.dixmont.core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.io7m.ventrad</groupId>
      <artifactId>com.io7m.ventrad.core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.annotation.versioning</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.annotation.bundle</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Ignore dependencies that bytecode analysis gets wrong. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <configuration>
          <failOnWarning>true</failOnWarning>
          <ignoredUnusedDeclaredDependencies>
            <ignoredUnusedDeclaredDependency>
              io.opentelemetry:opentelemetry-exporter-sender-jdk:*
            </ignoredUnusedDeclaredDependency>
          </ignoredUnusedDeclaredDependencies>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.io7m.stmp</groupId>
        <artifactId>string-template-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-version</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>
              <template>
                <name>StVersion</name>
                <inputFile>
                  ${project.basedir}/src/main/string-template/StVersion.st
                </inputFile>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/stonesignal/server/StVersion.java
                </outputFile>
                <properties>
                  <appVersion>${project.version}</appVersion>
                  <appBuild>${buildNumber}</appBuild>
                </properties>
              </template>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>

        <dependencies>
          <dependency>
            <groupId>com.io7m.trasco</groupId>
            <artifactId>com.io7m.trasco.api</artifactId>
            <version>${com.io7m.trasco.version}</version>
          </dependency>
          <dependency>
            <groupId>com.io7m.trasco</groupId>
            <artifactId>com.io7m.trasco.vanilla</artifactId>
            <version>${com.io7m.trasco.version}</version>
          </dependency>
          <dependency>
            <groupId>com.io7m.trasco</groupId>
            <artifactId>com.io7m.trasco.xml.schemas</artifactId>
            <version>${com.io7m.trasco.version}</version>
          </dependency>
        </dependencies>

        <executions>
          <execution>
            <id>generate-sql</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>com.io7m.trasco.vanilla.TrSchemaRevisionSetSQLMain</mainClass>
              <includePluginDependencies>true</includePluginDependencies>
              <includeProjectDependencies>false</includeProjectDependencies>
              <arguments>
                <argument>${project.basedir}/src/main/resources/com/io7m/stonesignal/server/database/database.xml
                </argument>
                <argument>${project.build.directory}/database.sql</argument>
                <argument>ROLES</argument>
                <argument>GRANTS</argument>
                <argument>FUNCTIONS</argument>
                <argument>TRIGGERS</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>${org.jooq.version}</version>
        <configuration>
          <configurationFile>src/main/jooq/configuration.xml</configurationFile>
        </configuration>
        <executions>
          <execution>
            <id>jooq-codegen</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta-extensions</artifactId>
            <version>${org.jooq.version}</version>
          </dependency>
          <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-postgres-extensions</artifactId>
            <version>${org.jooq.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-jooq-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/jooq</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-st</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/string-template</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>distribution</id>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <finalName>stonesignal</finalName>
              <descriptors>
                <descriptor>src/main/assembly/distribution.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
